// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// Bsic context of schema
// modifiers can either be array [] or ?
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String           @id @default(uuid())
  name           String
  email          String           @unique
  isAdmin        Boolean
  writtenPosts   Post[]           @relation("WrittenPosts")
  favouritePosts Post[]           @relation("FavouritePosts")
  userpreference UserPreferences? //one to one
  //file_size Bytes
  //something Unsupported("")
}

model UserPreferences {
  id           String  @id @default(uuid())
  emailUpdates Boolean
  user         User    @relation(fields: [userId], references: [id])
  userId       String  @unique
}

model Post {
  id            String     @id @default(uuid())
  rating        Float
  createdAt     DateTime
  updatedAt     DateTime
  author        User       @relation("WrittenPosts", fields: [authorId], references: [id]) // this part actually links both the models so like userId of post is linked with id of user its like a foreign key reference to primary key of user
  authorId      String
  //the below relation is one to many
  favouriteBy   User?      @relation("FavouritePosts", fields: [favouriteById], references: [id]) // there is a realtion message added in order to define ambigous situations
  favouriteById String?
  categories    Category[]
}

model Category {
  id    String @id @default(uuid())
  posts Post[] // many to many
}
